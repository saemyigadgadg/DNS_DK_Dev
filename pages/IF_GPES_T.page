<!--
  @description       : 
  @author            : deokjun.kim@sbtglobal.com
  @group             : 
  @last modified on  : 2025-04-12
  @last modified by  : yeongdeok.seo@sbtglobal.com
  Modifications Log
  Ver   Date         Author                      Modification
  1.0   11-14-2024   deokjun.kim@sbtglobal.com   Initial Version
-->
<apex:page controller="IF_GPES_TempController" showHeader="false">
    <!-- 버튼 클릭 시 호출할 자바스크립트 함수 -->
    <apex:iframe id="streeminvite" src="" scrolling="false" width="100%" height="800" />

    <script>
        
        // const childDomain = "https://gpes.dn-solutions.com"; // 자식 도메인 URL (운영) (현재 카트기능 막아놓음)
        // const childDomain = "http://gpesdev.dn-solutions.com"; // 자식 도메인 URL (개발)
        const childDomain = "{!childDomain}"; // 자식 도메인 URL (개발)
        const gateTy = "A"; // 고정값
        const crmsso = "Y"; // 고정값
        const loginNo = "{!loginNo}"; // CRM 제공 로그인 아이디
        // var urlParams = new URLSearchParams(window.location.search);
        var gijong = "{!gijong}";
        var hogi   = "{!hogi}";
        var type   = "{!type}";
        var part_no   = "{!part_no}";
        // var isIframe   = urlParams.get('isIframe');

        orderCall();

        function orderCall() {
            const message = { type: "CRM" };
            const iframe = document.getElementById('streeminvite');
            const childUrl = new URL('/gpesGate.do', childDomain);
            const searchParams = new URLSearchParams();

            // URL 파라미터 설정
            if (type == 'reqParts') {
                childUrl.searchParams.append('gateTy', gateTy);
                childUrl.searchParams.append('token', '');
                childUrl.searchParams.append('loginNo', loginNo);
                childUrl.searchParams.append('crmsso', crmsso);
                childUrl.searchParams.append('authReq', '1');
                childUrl.searchParams.append('modelSfx', gijong);
                childUrl.searchParams.append('bomserial', hogi);
            } else {
                childUrl.searchParams.append('gateTy', 'dealer');
                childUrl.searchParams.append('token', '');
                childUrl.searchParams.append('crmsso', crmsso);
                childUrl.searchParams.append('loginNo', loginNo);
                childUrl.searchParams.append('authReq', '1'); 
            }
            
            console.log('childUrl.toString() : ' + childUrl.toString());
            // iframe src 설정 및 메시지 전송
            iframe.src = childUrl.toString();
            iframe.contentWindow.postMessage(message, childDomain);
            console.log('Iframe initialized with order call');
        }

        // 메시지 수신 핸들러
        window.addEventListener('message', (event) => {   
            console.log('event.origin', event);
            console.log('event.origin', event.origin);
            console.log('event.data', event.data);

            // //자식 PC
            // if (event.origin !== childDomain) {
            //     console.error('신뢰할 수 없는 출처:', event.origin);
            //     return;
            // }

            // 메시지 타입에 따른 처리
            const data = event.data;
            console.log("Received data:", data);
            
            switch(data.type) {
                case 'TOKEN_PUB':
                    // handleTokenPublication(data.token);
                    if (type == 'reqParts') {
                        handleTokenPublication(data.loginNo, data.token);
                    } else {
                        handleTokenPublicationElse(data.loginNo, data.token);
                    }
            		// Toke_publication(data.loginNo, data.token);
                    break;
                case 'AUTHENTICATION_FAILED':
                    console.log('Authentication failed');
                    break;
                case 'FORM_SUBMITTED':
                    handleFormSubmission(data.payload);
                    break;
                case 'ERROR':
                    handleError(data.error);
                    break;
                default:
                    console.log('Unknown message type:', data.type);
            }
        });

        // 토큰 처리 함수
        function handleTokenPublication(loginNo, token) {
            // const token = 'eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiJNVEdQRVNBRE1JTiIsImlhdCI6MTczMTg4NzA2MywiZXhwIjoxNzMxOTczNDYzfQ.QYrxB9bXAAwHSIdBDIBTLkgzLObE49K4UOT9UOmHcy0Wegszqqdz7ECWZX2nAFUK';
            console.log('Received token:', token);
            const message = { type: "CRM" };
            const iframe = document.getElementById('streeminvite');
            const childUrl = new URL('/gpesGate.do', childDomain);
            // const searchParams = new URLSearchParams();
            
            childUrl.searchParams.append('gateTy', gateTy);
            childUrl.searchParams.append('token', token);
            childUrl.searchParams.append('crmsso', crmsso);
            childUrl.searchParams.append('loginNo', loginNo);
            childUrl.searchParams.append('authReq', '2');
            childUrl.searchParams.append('modelSfx', gijong); 
            childUrl.searchParams.append('bomserial', hogi); 

            console.log('childUrl.toString() : ' + childUrl.toString());
            iframe.src = childUrl.toString();
            // iframe.contentWindow.postMessage(message, childDomain);

        }

        function handleTokenPublicationElse(loginNo, token) {
            console.log('Received token:', token);
            const message = { type: "CRM" };
            const childUrl = new URL('/gpesGate.do', childDomain);

            childUrl.searchParams.append('gateTy', 'dealer');
            childUrl.searchParams.append('token', token);
            childUrl.searchParams.append('loginNo', loginNo);
            childUrl.searchParams.append('crmsso', crmsso);
            if (type == 'twp') {
                console.log('type ::: twp');
                childUrl.searchParams.append('bulletin_sts', 'TOWINFO');
                childUrl.searchParams.append('part_no', part_no);
                
            } else if (type == 'partinfo') {
                console.log('type ::: partinfo');
                childUrl.searchParams.append('bulletin_sts', 'PARTINFO');
                childUrl.searchParams.append('part_no', part_no);
            } else if (type == 'pc') {
                console.log('type ::: pc');
                childUrl.searchParams.append('stype', 'PC');
                childUrl.searchParams.append('modelSfx', gijong);
            } else if (type == 'pi') {
                console.log('type ::: pi');
                childUrl.searchParams.append('stype', 'PI');
                childUrl.searchParams.append('part_no', part_no);
            }
            console.log('childUrl.toString()Else : ' + childUrl.toString());
            window.location.href = childUrl.toString();

        }

        // 폼 제출 처리 함수
        function handleFormSubmission(payload) {
            console.log('Form submission data:', payload);
            // 부모에게 JSON 데이터를 전송
            window.parent.postMessage(payload, '*');
        }

        // 에러 처리 함수
        function handleError(error) {
            console.error('Error:', error);
            // 에러 처리 로직 추가
        }
    </script>
</apex:page>