/**
 * @description       : 
 * @author            : Joohyun Lee
 * @group             : 
 * @last modified on  : 04-21-2025
 * @last modified by  : Hanyeong Choi
**/
public with sharing class DN_RFQ_RevisionController {
    @AuraEnabled
    public static string currentStatus(String recordId){
        try {
            List<PS__c> statusCheck = 
            [
                SELECT
                    Id,
                    Status__c
                FROM
                    PS__c
                WHERE
                    Id =: recordId
            ];
            if(statusCheck[0].Status__c != 'AE Confirm'){
                return 'AE Confirm';
            }else {
                return 'SUCCESS';
            }
        } catch (Exception e) {
            throw new AuraHandledException(e.getMessage());
        }
    }

    @AuraEnabled
    public static string rfqnewVersion(String recordId, PS__c upRecord){
        try {
            Id currentUserId = UserInfo.getUserId();
            List<User> currentUserProfileName = [SELECT Id, Profile.Name FROM User WHERE Id = :currentUserId LIMIT 1];
            Boolean checkAE = false;
            if(currentUserProfileName[0].Profile.Name.contains('AE')){
                checkAE = true;
            }
            List<RFQSpecificationHistory__c> countHistory = 
            [
                SELECT
                    Id
                FROM
                    RFQSpecificationHistory__c
                WHERE
                    RFQSpecification__c =: recordId
            ];
            List<PS__c> countVersion = 
            [
                SELECT
                    Id, 
                    OwnerId, 
                    IsDeleted, 
                    Name, 
                    CurrencyIsoCode, 
                    Opportunity__c, 
                    SalesArea__c, 
                    CustomerDesc__c, 
                    SignificanceLevel__c, 
                    SoldTo__c, 
                    RequiredDelivryDate__c, 
                    Status__c, 
                    PhoneNo__c, 
                    FM_DealerPhoneNumber__c,
                    Email__c, 
                    CustomerName__c, 
                    Customer__c, 
                    PSModel__c, 
                    CustomerPhoneNo__c, 
                    CustomerContact__c, 
                    CustomerMobileNo__c, 
                    CustomerEmail__c, 
                    PartsforMachining__c, 
                    Type__c, 
                    MaterialHardness__c, 
                    ProcessesBeforeMachining__c, 
                    ProductionVolumeYearly__c, 
                    WorkingHoursDaily__c, 
                    WorkingDaysMonthly__c, 
                    OperationRate__c, 
                    CycleTimeRequired__c, 
                    MachineType__c, 
                    Model__c, 
                    Quantity__c, 
                    ChuckType__c, 
                    FixtureClamp__c, 
                    RecommendedToolMaker__c, 
                    AutomationType__c, 
                    LoadCapacity__c, 
                    ResponsibleBranch__c, 
                    IsInterfaced__c, 
                    ERPInquiryNo__c, 
                    Version__c, 
                    Name__c, 
                    AEUser__c,
                    InquirySeq__c,
                    Inquiry_Seq2__c
                FROM
                    PS__c
                WHERE
                    Id =: recordId
            ];
            System.debug('status : ' + countVersion[0].Status__c);
            if(countVersion[0].Status__c != 'AE Confirm'){
                return 'AE Confirm';
            }
            System.debug('countHistory.size() : ' + countHistory.size());
            PS__c versionUp = new PS__c();
            versionUp.Id = recordId;
            versionUp.Version__c = countVersion[0].Version__c + 1;
            versionUp.RequiredDelivryDate__c         = upRecord.RequiredDelivryDate__c;         
            versionUp.PartsforMachining__c           = upRecord.PartsforMachining__c;
            versionUp.MaterialHardness__c            = upRecord.MaterialHardness__c;
            versionUp.Type__c                        = upRecord.Type__c;
            if(checkAE){
                versionUp.Status__c                      = 'SEReceipt';
            }else{
                versionUp.Status__c                      = 'RequestToReview';
            }
            versionUp.ProcessesBeforeMachining__c    = upRecord.ProcessesBeforeMachining__c;
            versionUp.ProductionVolumeYearly__c      = upRecord.ProductionVolumeYearly__c;
            versionUp.OperationRate__c               = upRecord.OperationRate__c;
            versionUp.WorkingHoursDaily__c           = upRecord.WorkingHoursDaily__c;
            versionUp.CycleTimeRequired__c           = upRecord.CycleTimeRequired__c;
            versionUp.WorkingDaysMonthly__c          = upRecord.WorkingDaysMonthly__c;
            versionUp.MachineType__c                 = upRecord.MachineType__c;
            versionUp.Quantity__c                    = upRecord.Quantity__c;
            versionUp.Model__c                       = upRecord.Model__c;
            versionUp.PSModel__c                     = upRecord.PSModel__c;
            versionUp.ChuckType__c                   = upRecord.ChuckType__c;
            versionUp.RecommendedToolMaker__c        = upRecord.RecommendedToolMaker__c;
            versionUp.FixtureClamp__c                = upRecord.FixtureClamp__c;
            versionUp.AutomationType__c              = upRecord.AutomationType__c;
            versionUp.LoadCapacity__c                = upRecord.LoadCapacity__c;
            versionUp.CustomerDesc__c         = upRecord.CustomerDesc__c;
            update versionUp;

            //PS Copy
            try {
                System.debug('Opportunity__c: ' + countVersion[0].Opportunity__c);
                System.debug('OwnerId: ' + countVersion[0].OwnerId);
                System.debug('SoldTo__c: ' + countVersion[0].SoldTo__c);
                RFQSpecificationHistory__c newRFQhistory = new RFQSpecificationHistory__c();
                newRFQhistory.RFQSpecification__c = countVersion[0].Id;
                newRFQhistory.OwnerId = countVersion[0].OwnerId;
                newRFQhistory.CurrencyIsoCode = countVersion[0].CurrencyIsoCode;
                newRFQhistory.Opportunity__c = countVersion[0].Opportunity__c;
                newRFQhistory.SalesArea__c = countVersion[0].SalesArea__c;
                newRFQhistory.CustomerDesc__c = countVersion[0].CustomerDesc__c;
                newRFQhistory.SignificanceLevel__c = countVersion[0].SignificanceLevel__c;
                newRFQhistory.SoldTo__c = countVersion[0].SoldTo__c;
                newRFQhistory.RequiredDelivryDate__c = countVersion[0].RequiredDelivryDate__c;
                newRFQhistory.PhoneNo__c = countVersion[0].FM_DealerPhoneNumber__c; //countVersion[0].PhoneNo__c;
                newRFQhistory.Email__c = countVersion[0].Email__c;
                newRFQhistory.CustomerName__c = countVersion[0].CustomerName__c;
                newRFQhistory.Customer__c = countVersion[0].Customer__c;
                newRFQhistory.PSModel__c = countVersion[0].PSModel__c;
                newRFQhistory.CustomerPhoneNo__c = countVersion[0].CustomerPhoneNo__c;
                newRFQhistory.CustomerContact__c = countVersion[0].CustomerContact__c;
                newRFQhistory.CustomerMobileNo__c = countVersion[0].CustomerMobileNo__c;
                newRFQhistory.CustomerEmail__c = countVersion[0].CustomerEmail__c;
                newRFQhistory.PartsforMachining__c = countVersion[0].PartsforMachining__c;
                newRFQhistory.Type__c = countVersion[0].Type__c;
                newRFQhistory.MaterialHardness__c = countVersion[0].MaterialHardness__c;
                newRFQhistory.ProcessesBeforeMachining__c = countVersion[0].ProcessesBeforeMachining__c;
                newRFQhistory.ProductionVolumeYearly__c = countVersion[0].ProductionVolumeYearly__c;
                newRFQhistory.WorkingHoursDaily__c = countVersion[0].WorkingHoursDaily__c;
                newRFQhistory.WorkingDaysMonthly__c = countVersion[0].WorkingDaysMonthly__c;
                newRFQhistory.OperationRate__c = countVersion[0].OperationRate__c;
                newRFQhistory.CycleTimeRequired__c = countVersion[0].CycleTimeRequired__c;
                newRFQhistory.MachineType__c = countVersion[0].MachineType__c;
                newRFQhistory.Model__c = countVersion[0].Model__c;
                newRFQhistory.Quantity__c = countVersion[0].Quantity__c;
                newRFQhistory.ChuckType__c = countVersion[0].ChuckType__c;
                newRFQhistory.FixtureClamp__c = countVersion[0].FixtureClamp__c;
                newRFQhistory.RecommendedToolMaker__c = countVersion[0].RecommendedToolMaker__c;
                newRFQhistory.AutomationType__c = countVersion[0].AutomationType__c;
                newRFQhistory.LoadCapacity__c = countVersion[0].LoadCapacity__c;
                newRFQhistory.ResponsibleBranch__c = countVersion[0].ResponsibleBranch__c;
                newRFQhistory.IsInterfaced__c = countVersion[0].IsInterfaced__c;
                newRFQhistory.ERPInquiryNo__c = countVersion[0].ERPInquiryNo__c;
                newRFQhistory.Version__c = countVersion[0].Version__c;
                newRFQhistory.Name__c = countVersion[0].Name__c;
                newRFQhistory.AEUser__c = countVersion[0].AEUser__c;
                newRFQhistory.InquirySeq__c = String.valueOf(countVersion[0].Inquiry_Seq2__c);
                newRFQhistory.CustomerDesc__c = countVersion[0].CustomerDesc__c;
                insert newRFQhistory;
            } catch (Exception e) {
                System.debug('revision history : ' + e.getLineNumber() + ' : ' + e.getMessage());
            }
            
            String lang;
            Set<Id> notiInfo = new Set<Id>{countVersion[0].OwnerId, countVersion[0].AEUser__c};
            List<User> getEmail =  DN_WithoutSharingClass.getUserEmails(notiInfo);
            // List<User> getEmail = [SELECT Id, Email FROM User WHERE Id IN: notiInfo];
            List<Network> portal = [SELECT Id, Name FROM Network WHERE Name = 'Partners']; // FIXME : Partners 맞는지 확인 후 수정
            String instanceUrl = Network.getLoginUrl(portal[0].Id).removeEnd('/s/login') + '/s/ps/' + countVersion[0].Id;
            List<AlertManager__c> am = [SELECT Id FROM AlertManager__c WHERE Name = 'PS Revision Alert'];
            Id alertId;

            if(!am.isEmpty()){
                alertId = am[0].Id;
            }else{
                alertId = 'a0xF7000009v4JnIAI';
            }
            for(Integer i = 0; i < getEmail.size(); i++){
                if(getEmail[i].LanguageLocaleKey == 'ko'){
                    lang = 'ko';
                }else{
                    lang = 'en';
                }
                UTIL_Alert.HistoryWrapper wrapEmail = new UTIL_Alert.HistoryWrapper();
                    wrapEmail.alertID            = alertId;
                    wrapEmail.targetID           = countVersion[0].Id;
                    wrapEmail.alertType          = 'Email';
                    wrapEmail.receiverforEmail   = new List<String>{getEmail[i].Email};
                    // wrapEmail.receiverforEmail   = new List<String>{'sejin.kwon@dncompany.com'};
                    wrapEmail.alertLanguage      = lang;
                    wrapEmail.elementList        = new List<String>{instanceUrl};

                UTIL_Alert.HistoryWrapper wrapNoti = new UTIL_Alert.HistoryWrapper();
                    wrapNoti.alertID            = alertId;
                    wrapNoti.targetID           = countVersion[0].Id;
                    wrapNoti.alertType          = 'Notification';
                    wrapNoti.receiverforID      = new Set<Id>{getEmail[i].Id};
                    wrapNoti.alertLanguage      = lang;
                    wrapNoti.elementList        = new List<String>{countVersion[0].Name};

                UTIL_Alert.runAlertEvent(new List<UTIL_Alert.HistoryWrapper>{wrapEmail,wrapNoti});
            }
            

            return 'SUCCESS';
        } catch (Exception e) {
            System.debug(' Revision Error : ' + e.getLineNumber() + ' : ' + e.getMessage());
            throw new AuraHandledException(e.getMessage());
        }
    }
    public static void dummy() {
        Integer i = 0;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        //         i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
        // i++;
    }
}